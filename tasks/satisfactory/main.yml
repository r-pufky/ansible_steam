---
###############################################################################
# Satisfactory Install
###############################################################################
# Satisfactory dedicated server.
#
# INI files contain duplicate keys (violating the INI standard). Files are
# deleted and re-created with exlcusive disabled to prevent infinite duplicate
# key growth in configs.
#
# Generates:
#   _steam_satisfactory_dir: str location of configs.
#   _steam_satisfactory_log_output: str location of output log.
#   _steam_satisfactory_log_error: str location of error log.
#
# Reference:
# * https://satisfactory.fandom.com/wiki/Dedicated_servers#Linux
# * https://satisfactory.fandom.com/wiki/Dedicated_servers/Running_as_a_Service
# * https://satisfactory.fandom.com/wiki/Dedicated_servers/Configuration_files
# * https://satisfactory.fandom.com/wiki/Dedicated_servers#Loading_a_save_file

- name: 'satisfactory | set log locations'
  ansible.builtin.set_fact:
    _steam_satisfactory_log_output: '{% if steam_satisfactory_log_journal %}journal{% else %}append:/var/log/satisfactory/server.log{% endif %}'
    _steam_satisfactory_log_error: '{% if steam_satisfactory_log_journal %}{% else %}append:/var/log/satisfactory/error.log{% endif %}'

- name: 'satisfactory | generate install configuration'
  ansible.builtin.set_fact:
    _steam_satisfactory_dir: '{{ steam_satisfactory_dir }}/FactoryGame/Saved/Config/LinuxServer'
    _steam_satisfactory_save_dir: '/home/{{ steam_user }}/.config/Epic/FactoryGame/Saved/SaveGames'
    _steam_satisfactory_systemd:
      description:       'Satisfactory Dedicated Server'
      after:             'syslog.target network.target nss-lookup.target network-online.target'
      wants:             'network-online.target'
      user:              '{{ steam_user }}'
      group:             '{{ steam_group }}'
      working_directory: '{{ steam_satisfactory_dir }}'
      environment:
        - 'LD_LIBRARY_PATH={{ steam_satisfactory_dir }}/linux64'
      exec_start_pre:    '/usr/games/steamcmd +@sSteamCmdForcePlatformType {{ steam_default_satisfactory_platform }} +force_install_dir {{ steam_satisfactory_dir }} +login anonymous +app_update {{ steam_default_satisfactory_app_id }} -beta {{ steam_satisfactory_server_version }} {{ steam_satisfactory_app_extras }} validate +quit'
      exec_start:        '{{ steam_satisfactory_dir }}/FactoryServer.sh -multihome -ServerQueryPort=15777 -BeaconPort=15000 -Port=7777 -unattended'
      standard_output:   '{{ _steam_satisfactory_log_output }}'
      standard_error:    '{{ _steam_satisfactory_log_error }}'
      timeout_start_sec: 'infinity'
      restart:           'on-failure'
      wanted_by:         'multi-user.target'

- name: 'satisfactory | create directories'
  ansible.builtin.file:
    path:  '{{ item }}'
    owner: '{{ steam_user }}'
    group: '{{ steam_group }}'
    mode:  0755
    state: 'directory'
  loop:
    - '{{ steam_satisfactory_dir }}'
    - '/var/log/satisfactory'

- name: 'satisfactory | set logging file rotation'
  ansible.builtin.template:
    src:   'logrotate.conf.j2'
    dest:  '/etc/logrotate.d/satisfactory.conf'
    owner: 'root'
    group: 'root'
    mode:  0644
  vars:
    steam_logrotate_period:      '{{ steam_default_satisfactory_logrotate_period }}'
    steam_logrotate_count:       '{{ steam_default_satisfactory_logrotate_count }}'
    steam_logrotate_new_log:     '{{ steam_default_satisfactory_logrotate_new_log }}'
    steam_logrotate_date_suffix: '{{ steam_default_satisfactory_logrotate_date_suffix }}'
    steam_logrotate_compress:    '{{ steam_default_satisfactory_logrotate_compress }}'
  when: not steam_satisfactory_log_journal

- name: 'satisfactory | remove file logging rotation'
  ansible.builtin.file:
    path:  '/etc/logrotate.d/satisfactory.conf'
    state: 'absent'
  when: steam_satisfactory_log_journal

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/update_steam.yml
  vars:
    steam_platform: '{{ steam_default_satisfactory_platform }}'
  when: steam_satisfactory_update_steamcmd

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/update_server.yml
  vars:
    steam_platform:   '{{ steam_default_satisfactory_platform }}'
    steam_dir:        '{{ steam_satisfactory_dir }}'
    steam_app_id:     '{{ steam_default_satisfactory_app_id }}'
    steam_app_extras: '{{ steam_satisfactory_app_extras }}'
    steam_app_beta:   '-beta {{ steam_satisfactory_server_version }}'
  when: steam_satisfactory_update_server

- name: 'satisfactory | IGNORE .ini type conversion warnings'
  ansible.builtin.debug:
    msg: |
      INI files in satisfactory are unquoted, which lead to Ansible
      type-conversion warnings. These can be ignored.

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/atomic_ini.yml
  vars:
    steam_atomic_ini_game:     'satisfactory'
    steam_atomic_ini_base_dir: '{{ _steam_satisfactory_dir }}'
    steam_atomic_ini_config_file: 'ServerSettings.ini'
    steam_atomic_ini_no_extra_spaces: true
    steam_atomic_ini_owner:    '{{ steam_user }}'
    steam_atomic_ini_group:    '{{ steam_group }}'
    steam_atomic_ini_mode:     0640
    steam_atomic_ini_config:   '{{ steam_satisfactory_settings_server }}'
    steam_atomic_ini_handler:  'restart satisfactory.service'
  when: steam_satisfactory_settings_server

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/atomic_ini.yml
  vars:
    steam_atomic_ini_game:     'satisfactory'
    steam_atomic_ini_base_dir: '{{ _steam_satisfactory_dir }}'
    steam_atomic_ini_config_file: 'Scalability.ini'
    steam_atomic_ini_no_extra_spaces: true
    steam_atomic_ini_owner:    '{{ steam_user }}'
    steam_atomic_ini_group:    '{{ steam_group }}'
    steam_atomic_ini_mode:     0640
    steam_atomic_ini_config:   '{{ steam_satisfactory_settings_scalability }}'
    steam_atomic_ini_handler:  'restart satisfactory.service'
  when: steam_satisfactory_settings_scalability

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/atomic_ini.yml
  vars:
    steam_atomic_ini_game:     'satisfactory'
    steam_atomic_ini_base_dir: '{{ _steam_satisfactory_dir }}'
    steam_atomic_ini_config_file: 'GameUserSettings.ini'
    steam_atomic_ini_no_extra_spaces: true
    steam_atomic_ini_owner:    '{{ steam_user }}'
    steam_atomic_ini_group:    '{{ steam_group }}'
    steam_atomic_ini_mode:     0640
    steam_atomic_ini_config:   '{{ steam_satisfactory_settings_game_user }}'
    steam_atomic_ini_handler:  'restart satisfactory.service'
  when: steam_satisfactory_settings_game_user

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/atomic_ini.yml
  vars:
    steam_atomic_ini_game:     'satisfactory'
    steam_atomic_ini_base_dir: '{{ _steam_satisfactory_dir }}'
    steam_atomic_ini_config_file: 'Game.ini'
    steam_atomic_ini_no_extra_spaces: true
    steam_atomic_ini_owner:    '{{ steam_user }}'
    steam_atomic_ini_group:    '{{ steam_group }}'
    steam_atomic_ini_mode:     0640
    steam_atomic_ini_config:   '{{ steam_satisfactory_settings_game }}'
    steam_atomic_ini_handler:  'restart satisfactory.service'
  when: steam_satisfactory_settings_game

- ansible.builtin.import_tasks: roles/steam/tasks/steamcmd/atomic_ini.yml
  vars:
    steam_atomic_ini_game:     'satisfactory'
    steam_atomic_ini_base_dir: '{{ _steam_satisfactory_dir }}'
    steam_atomic_ini_config_file: 'Engine.ini'
    steam_atomic_ini_no_extra_spaces: true
    steam_atomic_ini_owner:    '{{ steam_user }}'
    steam_atomic_ini_group:    '{{ steam_group }}'
    steam_atomic_ini_mode:     0640
    steam_atomic_ini_config:   '{{ steam_satisfactory_settings_engine }}'
    steam_atomic_ini_handler:  'restart satisfactory.service'
  when: steam_satisfactory_settings_engine

- name: 'satisfactory | create service'
  ansible.builtin.template:
    src:   'systemd.service.j2'
    dest:  '/etc/systemd/system/satisfactory.service'
    owner: 'root'
    group: 'root'
    mode:  0755
  vars:
    systemd: '{{ _steam_satisfactory_systemd }}'
  notify: 'restart satisfactory.service'

- name: 'satisfactory | create backup directory'
  ansible.builtin.file:
    path:  '{{ steam_satisfactory_backup_dir }}'
    owner: '{{ steam_user }}'
    group: '{{ steam_group }}'
    mode:  0755
    state: 'directory'
  when: steam_satisfactory_backup_dir|length > 0

- name: 'satisfactory | backup daily'
  ansible.builtin.cron:
    name:         'backup satisfactory daily'
    special_time: 'daily'
    user:         '{{ steam_user }}'
    job:          '/usr/bin/tar -cvJf "{{ steam_satisfactory_backup_dir }}/$(date --iso-8601).tar.xz" "{{ _steam_satisfactory_save_dir }}"'
    state:        'present'
  when: steam_satisfactory_backup_dir|length > 0
