---
###############################################################################
# Atomically write INI files.
###############################################################################
# Writes a given INI file containing duplicate keys atomically.
#
# This is used in the case of INI files which contain duplicate keys (e.g. UE4
# games). INI files that contain duplicate keys violate the INI standard. Files
# are written to temp file with exlcusive disabled, then moved into place,
# preventing infinite duplicate key growth in configs.
#
# This should only be used for INI files meeting this specific case; standard
# cases should use community.general.ini_file directly in game configuration
# tasks.
#
# Args:
#   steam_atomic_ini_game: str name of steam game.
#   steam_atomic_ini_base_dir: str base location of config file to write.
#   steam_atomic_ini_config_file: str config file name.
#   steam_atomic_ini_no_extra_spaces: boolean 'no_extra_spaces' ini_file option.
#   steam_atomic_ini_owner: str file owner.
#   steam_atomic_ini_group: str file group.
#   steam_atomic_ini_mode: octal file permission.
#   steam_atomic_ini_config: dict containing INI settings to write.
#   steam_atomic_ini_handler: str handler to call if change occurred.

- name: '{{ steam_atomic_ini_game }} | set server {{ steam_atomic_ini_config_file }}.new'
  community.general.ini_file:
    path:    '{{ steam_atomic_ini_base_dir }}/{{ steam_atomic_ini_config_file }}.new'
    section: '{{ item.section }}'
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
    no_extra_spaces: '{{ steam_atomic_ini_no_extra_spaces }}'
    exclusive: false
    owner:   '{{ steam_atomic_ini_owner }}'
    group:   '{{ steam_atomic_ini_group }}'
    mode:    '{{ steam_atomic_ini_mode }}'
    state:   '{{ item.state }}'
  loop: '{{ steam_atomic_ini_config }}'
  when: steam_atomic_ini_config|length > 0
  notify: '{{ steam_atomic_ini_handler }}'

- name: '{{ steam_atomic_ini_game }} | atomic move {{ steam_atomic_ini_config_file }}'
  ansible.builtin.copy:
    src:   '{{ steam_atomic_ini_base_dir }}/{{ steam_atomic_ini_config_file }}.new'
    remote_src: true
    dest:  '{{ steam_atomic_ini_base_dir }}/{{ steam_atomic_ini_config_file }}'
    force: true
    owner: '{{ steam_atomic_ini_owner }}'
    group: '{{ steam_atomic_ini_group }}'
    mode:  '{{ steam_atomic_ini_mode }}'
  when: steam_atomic_ini_config|length > 0
  notify: '{{ steam_atomic_ini_handler }}'

- name: '{{ steam_atomic_ini_game }} | remove {{ steam_atomic_ini_config_file }}.new'
  ansible.builtin.file:
    path:  '{{ steam_atomic_ini_base_dir }}/{{ steam_atomic_ini_config_file }}.new'
    state: 'absent'
